<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                             http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.harctoolbox</groupId>
    <artifactId>IrScrutinizer</artifactId>
    <packaging>jar</packaging>
    <version>1.1.2dev</version>
    <name>IrScrutinizer</name>
    <parent>
        <groupId>org.harctoolbox</groupId>
        <artifactId>HarctoolboxBundle</artifactId>
        <version>1.0.0</version>
        <relativePath>..</relativePath>
    </parent>
    <licenses>
        <license>
            <name>GPL 3+</name>
            <url>https://www.gnu.org/licenses/gpl.html</url>
        </license>
    </licenses>
    <description>IrScrutinizer is a program for capturing, generating, analyzing, importing, and exporting of infrared signals.</description>
    <url>http://www.harctoolbox.org</url>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.nameLowercase>irscrutinizer</project.nameLowercase>
        <project.icon>/usr/local/${project.nameLowercase}/${project.nameLowercase}.png</project.icon>
        <project.exepath>/usr/local/bin/${project.nameLowercase}</project.exepath>
        <maven.compiler.source>1.7</maven.compiler.source>
        <maven.compiler.target>1.7</maven.compiler.target>
    </properties>
    <distributionManagement>
        <repository>
            <id>repos</id>
            <name>Repository</name>
            <url>file:///${project.basedir}/../repos</url>
        </repository>
    </distributionManagement>

    <profiles>
        <profile>
            <id>buildingFedoraPackage</id>
            <activation>
                <property>
                    <name>building_fedora_package</name>
                </property>
            </activation>
            <properties>
                <project.icon>${project.nameLowercase}</project.icon>
                <project.exepath>/usr/bin/${project.nameLowercase}</project.exepath>
            </properties>
        </profile>

        <!-- Build the Mac App, if possible -->
        <profile>
            <id>buildMacApp</id>
            <activation>
                <file>
                    <!-- Provided by Apple XCode, proprietary -->
                    <!-- /System/Library/Frameworks/JavaVM.framework/Versions/Current/Resources/MacOS/JavaApplicationStub -->
                    <exists>${basedir}/../tools/JavaApplicationStub</exists>
                </file>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>osxappbundle-maven-plugin</artifactId>
                        <version>1.0-alpha-2</version>
                        <configuration>
                            <mainClass>${project.groupId}.${project.nameLowercase}.${project.name}</mainClass>
                            <javaApplicationStub>${basedir}/../tools/JavaApplicationStub</javaApplicationStub>
                            <iconFile>${basedir}/${project.name}.icns</iconFile>
                            <additionalResources>
                                <fileSet>
                                    <directory>${project.build.directory}/doc</directory>
                                    <includes>
                                        <include>README*</include>
                                        <include>LICENSE*</include>
                                        <include>${project.name}*</include>
                                    </includes>
                                </fileSet>
                            </additionalResources>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>bundle</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <build>
        <plugins>
            <!-- Generate Version.java from Version.xml using mkVersion.xsl. -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>xml-maven-plugin</artifactId>
                <version>1.0</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>transform</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <transformationSets>
                        <transformationSet>
                            <dir>src/main/xml</dir>
                            <outputDir>
                                ${project.build.directory}/generated-sources/xml/org/harctoolbox/irscrutinizer
                            </outputDir>
                            <includes>
                                <include>Version.xml</include>
                            </includes>
                            <stylesheet>../tools/mkVersion.xsl</stylesheet>
                            <parameters>
                                <parameter>
                                    <name>version</name>
                                    <value>${project.version}</value>
                                </parameter>
                                <parameter>
                                    <name>url</name>
                                    <value>${project.url}</value>
                                </parameter>
                                <parameter>
                                    <name>appName</name>
                                    <value>${project.name}</value>
                                </parameter>
                            </parameters>
                            <fileMappers>
                                <fileMapper implementation="org.codehaus.plexus.components.io.filemappers.FileExtensionMapper">
                                    <targetExtension>.java</targetExtension>
                                </fileMapper>
                            </fileMappers>
                        </transformationSet>
                        <transformationSet>
                            <dir>src/main/xml</dir>
                            <outputDir>
                                ${project.build.directory}/generated-sources/xml/org/harctoolbox/irscrutinizer
                            </outputDir>
                            <includes>
                                <include>Props.xml</include>
                            </includes>
                            <stylesheet>../tools/mkProps.xsl</stylesheet>
                            <fileMappers>
                                <fileMapper implementation="org.codehaus.plexus.components.io.filemappers.FileExtensionMapper">
                                    <targetExtension>.java</targetExtension>
                                </fileMapper>
                            </fileMappers>
                        </transformationSet>
                        <transformationSet>
                            <dir>src/main/xdocs</dir>
                            <outputDir>
                                ${project.build.directory}/generated-documents
                            </outputDir>
                            <includes>
                                <include>${project.name}.xml</include>
                            </includes>
                            <stylesheet>../tools/xdoc2html.xsl</stylesheet>
                            <fileMappers>
                                <fileMapper implementation="org.codehaus.plexus.components.io.filemappers.FileExtensionMapper">
                                    <targetExtension>.html</targetExtension>
                                </fileMapper>
                            </fileMappers>
                        </transformationSet>
                    </transformationSets>
                    <catalogs>
                        <catalog>../schemas/catalog.xml</catalog>
                    </catalogs>
                </configuration>

                <!-- Use xalan instead of builtin parser which doesn't really work -->
                <dependencies>
                    <dependency>
                        <groupId>xalan</groupId>
                        <artifactId>xalan</artifactId>
                        <version>2.7.2</version>
                    </dependency>
                </dependencies>
            </plugin>

            <!-- Source and binary tarballs from src/assembly/* files. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifest>
                            <mainClass>${project.groupId}.${project.nameLowercase}.${project.name}</mainClass>
                        </manifest>
                        <manifestEntries>
                            <SplashScreen-Image>images/splash.png</SplashScreen-Image>
                        </manifestEntries>
                    </archive>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                    <finalName>${project.name}</finalName>
                    <!--appendAssemblyId>true</appendAssemblyId-->
                  <descriptors>
                      <descriptor>src/assembly/target.xml</descriptor>
                  </descriptors>
                </configuration>
                <executions>
                    <execution>
                        <id>exec-bin</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                    <!--execution>
                      <id>exec-src</id>
                      <configuration>
                        <descriptor>src/assembly/source.xml</descriptor>
                        <finalName>${project.name}-src-${project.version}</finalName>
                      </configuration>
                      <phase>package</phase>
                      <goals>
                        <goal>single</goal>
                      </goals>
                    </execution-->
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <showDeprecation>true</showDeprecation>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>1.9.1</version>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${project.build.directory}/generated-sources/xml</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <!-- Copy resources  in src/main/config to target dir. -->
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.7</version>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/config</directory>
                                    <filtering>true</filtering>
                                </resource>
                                <resource>
                                    <directory>../IrpMaster/src/main/config</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-resources-doc</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/doc</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/doc</directory>
                                    <filtering>true</filtering>
                                </resource>
                                <resource>
                                    <directory>../IrpMaster/src/main/doc</directory>
                                    <include>IrpMaster.releasenotes.txt</include>
                                </resource>
                                <resource>
                                    <directory>../IrpMaster/target/generated-documents</directory>
                                </resource>
                                <resource>
                                    <directory>target/generated-documents</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <!-- Allow execution from the target directory, Linux64 only :-) -->
                    <execution>
                        <id>copy-linux64-so</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/Linux-amd64</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>../native/Linux-amd64</directory>
                                    <filtering>false</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.4.0</version>
                <executions>
                    <execution>
                        <id>sillify docs</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>unix2dos</executable> <!-- Fedora pkg: dos2unix -->
                            <workingDirectory>${project.build.directory}/doc</workingDirectory>
                            <arguments>
                                <argument>${project.name}.releasenotes.txt</argument>
                                <argument>IrpMaster.releasenotes.txt</argument>
                                <argument>LICENSE.txt</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy icon</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>cp</executable>
                            <workingDirectory>${project.build.directory}</workingDirectory>
                            <arguments>
                                <argument>--force</argument>
                                <argument>../../Crystal-Clear-Icons/src/main/resources/icons/Crystal-Clear/64x64/apps/babelfish.png</argument>
                                <argument>${project.artifactId}.png</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>create-ico</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>icotool</executable> <!-- Fedora pkg: libicns-utils -->
                            <workingDirectory>${project.build.directory}</workingDirectory>
                            <arguments>
                                <argument>-o</argument>
                                <argument>${project.artifactId}.ico</argument>
                                <argument>-c</argument>
                                <argument>${project.artifactId}.png</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>make-wrapper-executable</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>chmod</executable>
                            <workingDirectory>${project.build.directory}</workingDirectory>
                            <arguments>
                                <argument>+x</argument>
                                <argument>${project.nameLowercase}.sh</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>install-prog</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${project.basedir}/../tools/install-irscrutinizer.sh</executable>
                            <workingDirectory>${project.basedir}</workingDirectory>
                            <arguments>
                                <argument>${project.installpath}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>IrpMaster</artifactId>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>HarcHardware</artifactId>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>Girr</artifactId>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>Jirc</artifactId>
        </dependency>
        <dependency>
            <groupId>com.mrallen</groupId>
            <artifactId>tonto</artifactId>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>Crystal-Clear-Icons</artifactId>
        </dependency>
    </dependencies>
</project>
